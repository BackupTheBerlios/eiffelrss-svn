system
	"newsreader"

root
	APPLICATION: make_and_launch

default
	assertion (invariant)
	assertion (loop)
	assertion (require)
	assertion (ensure)
	assertion (check)
	precompiled ("${ISE_EIFFEL}\precomp\spec\windows\vision2")


cluster
	newsreader:		"."

	feed_representation (newsreader):		"$\feed_representation"

	view (newsreader):			"$\view"

	windowed (view):		"$\windowed"

	bars (windowed):		"$\bars"

	dialogs (windowed):		"$\dialogs"

	library eiffelrss:		"..\..\library"
		exclude
			".svn"; 
		end

	library base:		"$ISE_EIFFEL\library\base"
		exclude
			"table_eiffel3"; "desc"; 
		default
			assertion (no)
			assertion (require)
		end

	library time:		"$ISE_EIFFEL\library\time"
		exclude
			"french"; "german"; 
		default
			assertion (no)
			assertion (require)
		end

	library gobo:		"$ISE_EIFFEL\free_add_ons\gobo\library"
		exclude
			"other"; "ve"; "se"; "hact"; "expat"; 
		default
			assertion (no)
			assertion (require)
		end

	library wel:		"$ISE_EIFFEL\library\wel"
		default
			assertion (no)
		end

	library vision2:		"${ISE_EIFFEL}\library\vision2"
		exclude
			"gtk"; "EIFGEN"; "tmp"; "temp"; "release"; "obsolete"; "CVS"; 
		default
			assertion (no)
			assertion (require)
		end

external

	include_path:
		"$(ISE_EIFFEL)\library\vision2\spec\include",
		"$(ISE_EIFFEL)\library\wel\spec\windows\include"

	object:
		"$(ISE_EIFFEL)\library\wel\spec\$(ISE_C_COMPILER)\lib\wel.lib",
		"$(ISE_EIFFEL)\library\vision2\spec\$(ISE_C_COMPILER)\lib\vision2.lib",
		"$(ISE_EIFFEL)\library\vision2\spec\$(ISE_C_COMPILER)\lib\zlib.lib",
		"$(ISE_EIFFEL)\library\vision2\spec\$(ISE_C_COMPILER)\lib\libpng.lib"

end
