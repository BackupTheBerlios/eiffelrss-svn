indexing
	description: "Main window for this application"
	author: "Generated by the New Vision2 Application Wizard."
	date: "$Date: 2005/1/13 18:10:25 $"
	revision: "1.0.0"

class 
	MAIN_WINDOW

inherit
	EV_TITLED_WINDOW
		redefine
			initialize,
			is_in_default_state
		end

	INTERFACE_NAMES
		export
			{NONE} all
		undefine
			default_create,
			copy
		end

create 
	make

feature {NONE} 

	make (a: APPLICATION) is
		require
			a_not_void: a /= Void
		do
			application := a
			default_create
		ensure
			application_set: application = a
		end

	initialize is
		do
			Precursor {EV_TITLED_WINDOW}
			build_standard_menu_bar
			set_menu_bar (standard_menu_bar)
			upper_bar.extend (create {EV_HORIZONTAL_SEPARATOR})
			build_standard_status_bar
			lower_bar.extend (standard_status_bar)
			build_main_container
			extend (main_container)
			close_request_actions.extend (agent request_close_window)
			set_title (application.properties.get ("Window_title"))
			set_size (application.properties.get ("Window_width").to_integer, application.properties.get ("Window_height").to_integer)
		end

	is_in_default_state: BOOLEAN is
		do
			Result := (width = application.properties.get ("Window_width").to_integer) and then (height = application.properties.get ("Window_height").to_integer) and then (title.is_equal (application.properties.get ("Window_title")))
		end
	
feature {NONE} 

	standard_menu_bar: EV_MENU_BAR

	file_menu: FILE_MENU

	edit_menu: EDIT_MENU

	channel_menu: CHANNEL_MENU

	help_menu: HELP_MENU

	build_standard_menu_bar is
		require
			menu_bar_not_yet_created: standard_menu_bar = Void
		do
			create standard_menu_bar
			create file_menu.make (application)
			standard_menu_bar.extend (file_menu)
			create edit_menu.make (application)
			standard_menu_bar.extend (edit_menu)
			create channel_menu.make (application)
			standard_menu_bar.extend (channel_menu)
			create help_menu.make (application)
			standard_menu_bar.extend (help_menu)
		ensure
			menu_bar_created: standard_menu_bar /= Void and then not standard_menu_bar.is_empty
		end
	
feature {NONE} 

	standard_toolbar: EV_TOOL_BAR

	build_standard_toolbar is
		require
			toolbar_not_yet_created: standard_toolbar = Void
		local
			toolbar_item: EV_TOOL_BAR_BUTTON
			toolbar_pixmap: EV_PIXMAP
		do
			create standard_toolbar
		ensure
			toolbar_created: standard_toolbar /= Void and then not standard_toolbar.is_empty
		end
	
feature {NONE} 

	standard_status_bar: EV_STATUS_BAR

	standard_status_label: EV_LABEL

	build_standard_status_bar is
		require
			status_bar_not_yet_created: standard_status_bar = Void and then standard_status_label = Void
		do
			create standard_status_bar
			standard_status_bar.set_border_width (2)
			create standard_status_label.make_with_text ("Add your status text here...")
			standard_status_label.align_text_left
			standard_status_bar.extend (standard_status_label)
		ensure
			status_bar_created: standard_status_bar /= Void and then standard_status_label /= Void
		end
	
feature 

	request_close_window is
		local
			question_dialog: EV_CONFIRMATION_DIALOG
		do
			if application.properties.get ("Ask_on_exit").is_equal ("yes") then
				create question_dialog.make_with_text (label_confirm_close_window)
				question_dialog.show_modal_to_window (Current)
				if question_dialog.selected_button.is_equal ((create {EV_DIALOG_CONSTANTS}).ev_ok) then
					destroy;
					(create {EV_ENVIRONMENT}).application.destroy
				end
			elseif application.properties.get ("Ask_on_exit").is_equal ("no") then
				destroy;
				(create {EV_ENVIRONMENT}).application.destroy
			end
		end
	
feature {NONE} 

	newsfeed_list: NEWSFEED_LIST
	
feature {NONE} 

	feed_detail_view: FEED_DETAIL_VIEW
	
feature {NONE} 

	main_container: EV_VERTICAL_BOX

	horizontal_split_area: EV_HORIZONTAL_SPLIT_AREA

	horizontal_box: EV_HORIZONTAL_BOX

	build_main_container is
		require
			main_container_not_yet_created: main_container = Void
		do
			create main_container
			create horizontal_split_area
			horizontal_split_area.set_minimum_width (200)
			create newsfeed_list.make
			horizontal_split_area.extend (newsfeed_list)
			create feed_detail_view.make
			horizontal_split_area.extend (feed_detail_view)
			main_container.extend (horizontal_split_area)
		ensure
			main_container_created: main_container /= Void
		end

	application: APPLICATION
	
end -- class MAIN_WINDOW
